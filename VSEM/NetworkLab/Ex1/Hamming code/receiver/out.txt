#include<stdio.h>
#include<stdlib.h>
#include<math.h>
int computeHamming(int*,int);
#include"hHamming.h"
int lookUp[4][8]={{1,3,5,7,9,11,13,15},
                  {2,3,6,7,10,11,14,15},
                  {4,5,6,7,12,13,14,15},
                  {8,9,10,11,12,13,14,15}};

int computeHamming(int* transData,int totSize)
{
    int loc,it,in,hamming=0,flag,errorPos=0;
    for(it=1,loc=0;it<totSize;it=pow(2,++loc))
    {
        hamming=0;
        for(in=0;in<8;in++)
        {
            flag = lookUp[loc][in];
            if(flag<=totSize)
                hamming^=transData[flag-1];
        }
        errorPos+=it*hamming;
    }
    return errorPos;
}
#include"hHamming.h"
int main()
{
    int it,size,*data,position;
    printf("Enter the Number of bits received: ");
    scanf("%d",&size);
    data= (int*)malloc(size*sizeof(int));
    printf("\nEnter the data received: \n\n");
    for(it=size-1;it>=0;it--)
    {
        scanf("%d",&data[it]);
    }
    position=computeHamming(data,size);
    if(position==0)
        printf("\n\nNo Error in the data\n\n");
    else
        printf("\n\nError is detected in position %d\n\n",position);
}
