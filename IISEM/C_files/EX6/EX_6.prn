Script started on Thu 19 Mar 2015 11:16:38 PM IST
bash-3.2$ cd 6a
bash-3.2$ cat hFile.h
#include<stdio.h>
long int sum(FILE *,int);
bash-3.2$ cat aFile.c
#include"hFile.h"
main()
{
 FILE *fp1;
 int n;
 long int tot;
 char ip[10];
 printf("Enter the Input File Name:");
 scanf("%s",ip);
 fp1=fopen(ip,"r");
 if(fp1==NULL)
   {
     printf("File Error...");
   }
 fscanf(fp1,"%d",&n);
 printf("Sum of %d Values :\n",n);
 tot=sum(fp1,n);
 printf("\nTOTAL IS :%ld",tot);
 fclose(fp1);
 }


bash-3.2$ cat iFile.c
#include "hFile.h"
long int sum(FILE *f,int n)
{
 long int sum=0;
 int i,d;
 for(i=0;i<n;i++)
  {
   fscanf(f,"%d",&d);
   printf("%d\n",d);
   sum += d;
  }
 return sum;
}

bash-3.2$ ./File
Enter the Input File Name:Input
Sum of 8 Values :
10
20
30
40
10
20
12
23

TOTAL IS :165
bash-3.2$ cd ..
bash-3.2$ cd 6b
bash-3.2$ cat hCopy.h
#include<stdio.h>
#include<string.h>
void read(FILE *,FILE *,int );
void calc(FILE *d);

//void copy(FILE *,FILE *);
//void print(FILE *);
bash-3.2$ cat aCopy.c
#include"hCopy.h"
main()
{
 FILE * fp1,*fp2;
 char ip[10],op[20];
 char a;
 int n;
 printf("Enter the Source File Name:");
 scanf("%s",ip);
 printf("Enter the Destination File Name:");
 scanf("%s",op);
 fp1=fopen(ip,"r");
 fp2=fopen(op,"w");
 if(fp1==NULL||fp2==NULL)
   printf("File Error.....");
 printf("Enter the position from where it has to be printed:");
 scanf("%d",&n);
 read(fp1,fp2,n);
 printf("<<<<<File is readed and Counted....>>>>>\n");
 fcloseall();
 fp2=fopen(op,"r+");
 calc(fp2);
 fcloseall();
}
bash-3.2$ cat iCopy.c
#include"hCopy.h"
void read(FILE *s, FILE *d, int n)
{
 int a[3]={0,0,0},i=1;
 char c;
 fseek(s,n,SEEK_SET);
 c=fgetc(s);
 while(c!=EOF)
 {  
   fprintf(d,"%c",c);
   c=fgetc(s);
  }
}
void calc(FILE *d)
{
 int a[3]={0,0,0};
 char o ='0';
 while(o!=EOF)
 { a[0]++;
   o=fgetc(d);
  if(o==32)
    { a[1]++;

    }
   else if(o=='\n')
    { a[2]++;
    }
 }
  printf("\nTotal Character %d\n",a[0]-1);
  printf("Total Words %d\nTotal No. Of Lines %d\n",a[1]+1,a[2]);

}
bash-3.2$ ./Copy
Enter the Source File Name:Input
Enter the Destination File Name:Output
Enter the position from where it has to be printed:12
<<<<<File is readed and Counted....>>>>>

Total Character 137
Total Words 24
Total No. Of Lines 4
bash-3.2$ cat Input
Hi This is N.Guru Manikandan
I am stduying B.E in Computer Science Engg..
And this is to test the file programe
Now We Are Going To see how its work
bash-3.2$ cat Output
.Guru Manikandan
I am stduying B.E in Computer Science Engg..
And this is to test the file programe
Now We Are Going To see how its work
bash-3.2$ cd ..
bash-3.2$ cd 6c
bash-3.2$ cat hEmp.h
#include<stdio.h>
#include<stdlib.h>
struct employee
{
 char name[30];
 int eid;
 float BP,DA,HRA,EPF,GP,salary;
}*e,*xtr,temp;
void display(FILE *,struct employee *,int);
void extract(FILE *,struct employee *,int,float );
void calc(struct employee *,FILE *,int );
void print(FILE *,int ,int );

bash-3.2$ cat aEmp.c
#include"hEmp.h"
main()
{
 FILE *fp1;
 char op[20];
 int i,n,ch,ep;
 float s;
 printf("Entr the Output File Name To Store:");
 scanf("%s",&op);
 fp1=fopen(op,"wb");
 printf("Enter the No. of Employee:");
 scanf("%d",&n);
 e=(struct employee *)malloc(n*sizeof(struct employee));
 xtr=(struct employee *)malloc(n*sizeof(struct employee));

 for(i=0;i<n;i++)
 {
  printf("Name:");
  scanf("%s",e[i].name);
  printf("ID:");
  scanf("%d",&e[i].eid);
  printf("Basic Pay:");
  scanf("%f",&e[i].BP);
 }
 calc(e,fp1,n);
 fclose(fp1);
 fp1=fopen(op,"rb");
 free(e);
 printf("Memory Deallocated for Structure Variable..\n");
 printf("Testing after free\n");
 do
 {
  printf("Enter the Choice:\n");
  printf("1)Display the Employee Details..\n2)Display the nth record...\n3)Extract the Employee Detail based on Salarry...\n4)Exit..\n:");
 scanf("%d",&ch);
 switch(ch)
 {
  case 1: display(fp1,xtr,n);
          rewind(fp1);
          break;
  case 2: printf("Enter the Employee No.to print:");
          scanf("%d",&ep); 
          if(ep<=n)
          print(fp1,n,ep);
          else
           printf("There is Only %d Employee in the list\n",n);
          rewind(fp1);
          break;
  case 3: printf("Enter the Salary to extract Greater than that amout:");
          scanf("%f",&s);
          extract(fp1,xtr,n,s);
          rewind(fp1);
          break;
  case 4: printf("Thank You\n");
         break;
  default:printf("Invalid Option...\n");
  }
 }while(ch!=4);
 fcloseall();
}
bash-3.2$ cat iEmp.c
#include"hEmp.h"
void calc(struct employee *s,FILE *f,int n)
{
 int t,i;
 for(i=0;i<n;i++)
 {
  s[i].DA=s[i].BP*.8;
  s[i].HRA=s[i].BP*.05;
  s[i].EPF=s[i].BP*.25;
  s[i].GP=s[i].DA+s[i].HRA+s[i].BP;
  s[i].salary=s[i].GP-s[i].EPF;
 }
 t=fwrite(s,sizeof(struct employee),n,f);
 if(t==n)
  {
   printf("<<<Data Transferd Sucessfully>>>\n");
  }

}
void display(FILE *f,struct employee *xtr,int n)
{
 int i,t;
 printf("DISPLAY\n");
t= fread(xtr,sizeof(struct employee),n,f);
if(t==n)
  {
   printf("<<<Data READ Sucessfully>>>\n");
  }


 for(i=0;i<n;i++)
 {
  printf("Name:%s\n",xtr[i].name);
  printf("ID:%d\n",xtr[i].eid);
  printf("Basic Pay:%.2f\n",xtr[i].BP);
  printf("DA:%.2f\n",xtr[i].DA);
  printf("HRA:%.2f\n",xtr[i].HRA);
  printf("EPF:%.2f\n",xtr[i].EPF);
  printf("Gross Pay:%.2f\n",xtr[i].GP);
  printf("Salary:%.2f\n",xtr[i].salary);
 }
}
void print(FILE *f,int n,int e)
{
 fseek(f,(e-1)*sizeof(struct employee),SEEK_SET);
 fread(&temp,sizeof(struct employee),1,f);
  printf("Name:%s\n",temp.name);
  printf("ID:%d\n",temp.eid);
  printf("Basic Pay:%.2f\n",temp.BP);
  printf("DA:%.2f\n",temp.DA);
  printf("HRA:%.2f\n",temp.HRA);
  printf("EPF:%.2f\n",temp.EPF);
  printf("Gross Pay:%.2f\n",temp.GP);
  printf("Salary:%.2f\n",temp.salary);
}
void extract(FILE *f,struct employee *xtr,int n,float sl)
{
 int i,t;
 t=fread(xtr,sizeof(struct employee),n,f);
  if(t==n)
   printf("<<<<DATA EXTRACTED>>>>\n");
 for(i=0;i<n;i++)
 { 
  if(xtr[i].salary>sl)
  {
  printf("Name:%s\n",xtr[i].name);
  printf("ID:%d\n",xtr[i].eid);
  printf("Basic Pay:%.2f\n",xtr[i].BP);
  printf("DA:%.2f\n",xtr[i].DA);
  printf("HRA:%.2f\n",xtr[i].HRA);
  printf("EPF:%.2f\n",xtr[i].EPF);
  printf("Gross Pay:%.2f\n",xtr[i].GP);
  printf("Salary:%.2f\n",xtr[i].salary);
  }
 }
}
bash-3.2$ ./Emp
Entr the Output File Name To Store:Output.bin
Enter the No. of Employee:4
Name:Guru
ID:1
Basic Pay:20500
Name:Mani
ID:2
Basic Pay:12000
Name:kandan
ID:3
Basic Pay:32000
Name:mano
ID:4
Basic Pay:23000
<<<Data Transferd Sucessfully>>>
Memory Deallocated for Structure Variable..
Testing after free
Enter the Choice:
1)Display the Employee Details..
2)Display the nth record...
3)Extract the Employee Detail based on Salarry...
4)Exit..
:1
DISPLAY
<<<Data READ Sucessfully>>>
Name:Guru
ID:1
Basic Pay:20500.00
DA:16400.00
HRA:1025.00
EPF:5125.00
Gross Pay:37925.00
Salary:32800.00
Name:Mani
ID:2
Basic Pay:12000.00
DA:9600.00
HRA:600.00
EPF:3000.00
Gross Pay:22200.00
Salary:19200.00
Name:kandan
ID:3
Basic Pay:32000.00
DA:25600.00
HRA:1600.00
EPF:8000.00
Gross Pay:59200.00
Salary:51200.00
Name:mano
ID:4
Basic Pay:23000.00
DA:18400.00
HRA:1150.00
EPF:5750.00
Gross Pay:42550.00
Salary:36800.00
Enter the Choice:
1)Display the Employee Details..
2)Display the nth record...
3)Extract the Employee Detail based on Salarry...
4)Exit..
:2
Enter the Employee No.to print:3
Name:kandan
ID:3
Basic Pay:32000.00
DA:25600.00
HRA:1600.00
EPF:8000.00
Gross Pay:59200.00
Salary:51200.00
Enter the Choice:
1)Display the Employee Details..
2)Display the nth record...
3)Extract the Employee Detail based on Salarry...
4)Exit..
:3
Enter the Salary to extract Greater than that amout:25000
<<<<DATA EXTRACTED>>>>
Name:Guru
ID:1
Basic Pay:20500.00
DA:16400.00
HRA:1025.00
EPF:5125.00
Gross Pay:37925.00
Salary:32800.00
Name:kandan
ID:3
Basic Pay:32000.00
DA:25600.00
HRA:1600.00
EPF:8000.00
Gross Pay:59200.00
Salary:51200.00
Name:mano
ID:4
Basic Pay:23000.00
DA:18400.00
HRA:1150.00
EPF:5750.00
Gross Pay:42550.00
Salary:36800.00
Enter the Choice:
1)Display the Employee Details..
2)Display the nth record...
3)Extract the Employee Detail based on Salarry...
4)Exit..
:4
Thank You
bash-3.2$ exit
exit

Script done on Thu 19 Mar 2015 11:30:42 PM IST
